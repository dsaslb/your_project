const nextJest = require('next/jest')

const createJestConfig = nextJest({
  // Provide the path to your Next.js app to load next.config.js and .env files
  dir: './',
})

// Add any custom config to be passed to Jest
const customJestConfig = {
  setupFilesAfterEnv: ['<rootDir>/jest.setup.js'],
  setupFiles: ['<rootDir>/jest.polyfills.js'],
  testEnvironment: 'jsdom',
  moduleNameMapper: {
    '^@/(.*)$': '<rootDir>/src/$1',
  },
  testEnvironmentOptions: {
    customExportConditions: ['node', 'node-addons'],
  },
  collectCoverageFrom: [
    'src/**/*.{js,jsx,ts,tsx}',
    '!src/**/*.d.ts',
    '!src/**/*.stories.{js,jsx,ts,tsx}',
    '!src/**/*.test.{js,jsx,ts,tsx}',
    '!src/**/*.spec.{js,jsx,ts,tsx}',
    '!src/**/index.{js,jsx,ts,tsx}',
    '!src/**/types.{js,jsx,ts,tsx}',
    '!src/**/constants.{js,jsx,ts,tsx}',
    '!src/**/utils.{js,jsx,ts,tsx}',
    '!src/**/helpers.{js,jsx,ts,tsx}',
    '!src/**/mocks.{js,jsx,ts,tsx}',
    '!src/**/fixtures.{js,jsx,ts,tsx}',
    '!src/**/stories.{js,jsx,ts,tsx}',
    '!src/**/story.{js,jsx,ts,tsx}',
    '!src/**/test.{js,jsx,ts,tsx}',
    '!src/**/spec.{js,jsx,ts,tsx}',
    '!src/**/__tests__/**',
    '!src/**/__mocks__/**',
    '!src/**/__fixtures__/**',
    '!src/**/__stories__/**',
    '!src/**/__test__/**',
    '!src/**/__spec__/**',
    '!src/**/node_modules/**',
    '!src/**/.next/**',
    '!src/**/out/**',
    '!src/**/dist/**',
    '!src/**/build/**',
    '!src/**/coverage/**',
    '!src/**/.nyc_output/**',
    '!src/**/.jest/**',
    '!src/**/.cache/**',
    '!src/**/.parcel-cache/**',
    '!src/**/.eslintcache/**',
    '!src/**/.stylelintcache/**',
    '!src/**/.prettierignore/**',
    '!src/**/.gitignore/**',
    '!src/**/.env*',
    '!src/**/next.config.js',
    '!src/**/tailwind.config.js',
    '!src/**/postcss.config.js',
    '!src/**/babel.config.js',
    '!src/**/webpack.config.js',
    '!src/**/rollup.config.js',
    '!src/**/vite.config.js',
    '!src/**/esbuild.config.js',
    '!src/**/swc.config.js',
    '!src/**/tsconfig.json',
    '!src/**/package.json',
    '!src/**/package-lock.json',
    '!src/**/yarn.lock',
    '!src/**/pnpm-lock.yaml',
    '!src/**/bun.lockb',
    '!src/**/README.md',
    '!src/**/CHANGELOG.md',
    '!src/**/LICENSE',
    '!src/**/.git/**',
    '!src/**/.github/**',
    '!src/**/.gitlab-ci.yml',
    '!src/**/.travis.yml',
    '!src/**/.circleci/**',
    '!src/**/.vscode/**',
    '!src/**/.idea/**',
    '!src/**/.DS_Store',
    '!src/**/Thumbs.db',
  ],
  coverageThreshold: {
    global: {
      branches: 70,
      functions: 70,
      lines: 70,
      statements: 70,
    },
  },
  coverageReporters: ['text', 'lcov', 'html', 'json', 'json-summary'],
  coverageDirectory: 'coverage',
  testMatch: [
    '<rootDir>/src/**/__tests__/**/*.{js,jsx,ts,tsx}',
    '<rootDir>/src/**/*.{test,spec}.{js,jsx,ts,tsx}',
    '<rootDir>/tests/**/*.{test,spec}.{js,jsx,ts,tsx}',
  ],
  testPathIgnorePatterns: [
    '<rootDir>/.next/',
    '<rootDir>/node_modules/',
    '<rootDir>/out/',
    '<rootDir>/dist/',
    '<rootDir>/build/',
    '<rootDir>/coverage/',
    '<rootDir>/.nyc_output/',
    '<rootDir>/.jest/',
    '<rootDir>/.cache/',
    '<rootDir>/.parcel-cache/',
    '<rootDir>/.eslintcache/',
    '<rootDir>/.stylelintcache/',
  ],
  transform: {
    '^.+\\.(js|jsx|ts|tsx)$': ['babel-jest', { presets: ['next/babel'] }],
  },
  transformIgnorePatterns: [
    '/node_modules/',
    '^.+\\.module\\.(css|sass|scss)$',
  ],
  moduleFileExtensions: ['js', 'jsx', 'ts', 'tsx', 'json'],
  testTimeout: 10000,
  verbose: true,
  clearMocks: true,
  restoreMocks: true,
  resetMocks: true,
  automock: false,
  globals: {
    'ts-jest': {
      tsconfig: '<rootDir>/tsconfig.jest.json',
    },
  },
}

// createJestConfig is exported this way to ensure that next/jest can load the Next.js config which is async
module.exports = createJestConfig(customJestConfig) 