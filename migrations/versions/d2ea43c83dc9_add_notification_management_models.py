"""Add notification management models

Revision ID: d2ea43c83dc9
Revises: 68148dc142eb
Create Date: 2025-07-12 00:18:30.039465

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "d2ea43c83dc9"
down_revision = "68148dc142eb"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # with op.batch_alter_table('restaurant_orders', schema=None) as batch_op:
    #     batch_op.drop_index('idx_restaurant_order_created_completed')
    #     batch_op.drop_index('idx_restaurant_order_employee_date')
    #     batch_op.drop_index('idx_restaurant_order_processing_time')
    #     batch_op.drop_index('idx_restaurant_order_store_status')
    #     batch_op.drop_index('ix_restaurant_orders_completed_at')
    #     batch_op.drop_index('ix_restaurant_orders_created_at')
    #     batch_op.drop_index('ix_restaurant_orders_employee_id')
    #     batch_op.drop_index('ix_restaurant_orders_order_number')
    #     batch_op.drop_index('ix_restaurant_orders_processing_minutes')
    #     batch_op.drop_index('ix_restaurant_orders_status')
    #     batch_op.drop_index('ix_restaurant_orders_store_id')

    # op.drop_table('restaurant_orders')
    with op.batch_alter_table("user_permissions", schema=None) as batch_op:
        batch_op.drop_index("idx_userpermission_active_expires")
        batch_op.drop_index("idx_userpermission_granter_date")
        batch_op.drop_index("idx_userpermission_user_name")
        batch_op.drop_index("ix_user_permissions_granted_by")
        batch_op.drop_index("ix_user_permissions_permission_name")
        batch_op.drop_index("ix_user_permissions_user_id")

    op.drop_table("user_permissions")
    with op.batch_alter_table("permission_change_logs", schema=None) as batch_op:
        batch_op.drop_index("idx_permissionlog_changer_date")
        batch_op.drop_index("idx_permissionlog_type_date")
        batch_op.drop_index("idx_permissionlog_user_date")
        batch_op.drop_index("ix_permission_change_logs_change_type")
        batch_op.drop_index("ix_permission_change_logs_changed_by")
        batch_op.drop_index("ix_permission_change_logs_created_at")
        batch_op.drop_index("ix_permission_change_logs_user_id")

    op.drop_table("permission_change_logs")
    with op.batch_alter_table("permission_templates", schema=None) as batch_op:
        batch_op.drop_index("ix_permission_templates_created_by")
        batch_op.drop_index("ix_permission_templates_role_type")

    op.drop_table("permission_templates")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "permission_templates",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(length=100), nullable=False),
        sa.Column("description", sa.VARCHAR(length=200), nullable=True),
        sa.Column("permissions", sa.VARCHAR(length=500), nullable=True),
        sa.Column("role_type", sa.VARCHAR(length=20), nullable=True),
        sa.Column("is_active", sa.BOOLEAN(), nullable=True),
        sa.Column("created_by", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    with op.batch_alter_table("permission_templates", schema=None) as batch_op:
        batch_op.create_index(
            "ix_permission_templates_role_type", ["role_type"], unique=False
        )
        batch_op.create_index(
            "ix_permission_templates_created_by", ["created_by"], unique=False
        )

    op.create_table(
        "permission_change_logs",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("user_id", sa.INTEGER(), nullable=False),
        sa.Column("changed_by", sa.INTEGER(), nullable=False),
        sa.Column("change_type", sa.VARCHAR(length=20), nullable=False),
        sa.Column("before_value", sa.VARCHAR(length=500), nullable=True),
        sa.Column("after_value", sa.VARCHAR(length=500), nullable=True),
        sa.Column("reason", sa.VARCHAR(length=200), nullable=True),
        sa.Column("ip_address", sa.VARCHAR(length=45), nullable=True),
        sa.Column("user_agent", sa.VARCHAR(length=500), nullable=True),
        sa.Column("created_at", sa.DATETIME(), nullable=True),
        sa.ForeignKeyConstraint(
            ["changed_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("permission_change_logs", schema=None) as batch_op:
        batch_op.create_index(
            "ix_permission_change_logs_user_id", ["user_id"], unique=False
        )
        batch_op.create_index(
            "ix_permission_change_logs_created_at", ["created_at"], unique=False
        )
        batch_op.create_index(
            "ix_permission_change_logs_changed_by", ["changed_by"], unique=False
        )
        batch_op.create_index(
            "ix_permission_change_logs_change_type", ["change_type"], unique=False
        )
        batch_op.create_index(
            "idx_permissionlog_user_date", ["user_id", "created_at"], unique=False
        )
        batch_op.create_index(
            "idx_permissionlog_type_date", ["change_type", "created_at"], unique=False
        )
        batch_op.create_index(
            "idx_permissionlog_changer_date", ["changed_by", "created_at"], unique=False
        )

    op.create_table(
        "user_permissions",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("user_id", sa.INTEGER(), nullable=False),
        sa.Column("permission_name", sa.VARCHAR(length=50), nullable=False),
        sa.Column("is_active", sa.BOOLEAN(), nullable=True),
        sa.Column("granted_by", sa.INTEGER(), nullable=False),
        sa.Column("granted_at", sa.DATETIME(), nullable=True),
        sa.Column("expires_at", sa.DATETIME(), nullable=True),
        sa.Column("reason", sa.VARCHAR(length=200), nullable=True),
        sa.ForeignKeyConstraint(
            ["granted_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("user_permissions", schema=None) as batch_op:
        batch_op.create_index("ix_user_permissions_user_id", ["user_id"], unique=False)
        batch_op.create_index(
            "ix_user_permissions_permission_name", ["permission_name"], unique=False
        )
        batch_op.create_index(
            "ix_user_permissions_granted_by", ["granted_by"], unique=False
        )
        batch_op.create_index(
            "idx_userpermission_user_name", ["user_id", "permission_name"], unique=False
        )
        batch_op.create_index(
            "idx_userpermission_granter_date",
            ["granted_by", "granted_at"],
            unique=False,
        )
        batch_op.create_index(
            "idx_userpermission_active_expires",
            ["is_active", "expires_at"],
            unique=False,
        )

    op.create_table(
        "restaurant_orders",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("order_number", sa.VARCHAR(length=50), nullable=False),
        sa.Column("customer_name", sa.VARCHAR(length=100), nullable=True),
        sa.Column("order_items", sa.TEXT(), nullable=False),
        sa.Column("total_amount", sa.INTEGER(), nullable=False),
        sa.Column("status", sa.VARCHAR(length=20), nullable=True),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("completed_at", sa.DATETIME(), nullable=True),
        sa.Column("processing_minutes", sa.INTEGER(), nullable=True),
        sa.Column("store_id", sa.INTEGER(), nullable=False),
        sa.Column("employee_id", sa.INTEGER(), nullable=False),
        sa.Column("notes", sa.TEXT(), nullable=True),
        sa.Column("payment_method", sa.VARCHAR(length=20), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.Column("stock_consumed", sa.BOOLEAN(), nullable=True),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["store_id"],
            ["branches.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("restaurant_orders", schema=None) as batch_op:
        batch_op.create_index(
            "ix_restaurant_orders_store_id", ["store_id"], unique=False
        )
        batch_op.create_index("ix_restaurant_orders_status", ["status"], unique=False)
        batch_op.create_index(
            "ix_restaurant_orders_processing_minutes",
            ["processing_minutes"],
            unique=False,
        )
        batch_op.create_index(
            "ix_restaurant_orders_order_number", ["order_number"], unique=1
        )
        batch_op.create_index(
            "ix_restaurant_orders_employee_id", ["employee_id"], unique=False
        )
        batch_op.create_index(
            "ix_restaurant_orders_created_at", ["created_at"], unique=False
        )
        batch_op.create_index(
            "ix_restaurant_orders_completed_at", ["completed_at"], unique=False
        )
        batch_op.create_index(
            "idx_restaurant_order_store_status", ["store_id", "status"], unique=False
        )
        batch_op.create_index(
            "idx_restaurant_order_processing_time", ["processing_minutes"], unique=False
        )
        batch_op.create_index(
            "idx_restaurant_order_employee_date",
            ["employee_id", "created_at"],
            unique=False,
        )
        batch_op.create_index(
            "idx_restaurant_order_created_completed",
            ["created_at", "completed_at"],
            unique=False,
        )

    # ### end Alembic commands ###
