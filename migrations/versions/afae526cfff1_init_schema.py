"""init schema

Revision ID: afae526cfff1
Revises:
Create Date: 2025-07-09 12:02:33.678068

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "afae526cfff1"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "brands",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("logo_url", sa.String(length=255), nullable=True),
        sa.Column("website", sa.String(length=255), nullable=True),
        sa.Column("contact_email", sa.String(length=120), nullable=True),
        sa.Column("contact_phone", sa.String(length=20), nullable=True),
        sa.Column("address", sa.String(length=200), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    with op.batch_alter_table("brands", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_brands_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_brands_status"), ["status"], unique=False)

    op.create_table(
        "iot_devices",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("device_type", sa.String(length=32), nullable=False),
        sa.Column("location", sa.String(length=128), nullable=True),
        sa.Column("description", sa.String(length=256), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "teams",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False, comment="팀명"),
        sa.Column(
            "description", sa.String(length=200), nullable=True, comment="팀 설명"
        ),
        sa.Column("manager_id", sa.Integer(), nullable=True, comment="팀장 ID"),
        sa.Column("branch_id", sa.Integer(), nullable=True, comment="소속 지점"),
        sa.Column("is_active", sa.Boolean(), nullable=True, comment="활성화 여부"),
        sa.Column("created_at", sa.DateTime(), nullable=True, comment="생성일시"),
        sa.Column("updated_at", sa.DateTime(), nullable=True, comment="수정일시"),
        sa.Column("permissions", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["branch_id"],
            ["branches.id"],
        ),
        sa.ForeignKeyConstraint(
            ["manager_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=80), nullable=False),
        sa.Column("email", sa.String(length=120), nullable=False),
        sa.Column("password_hash", sa.String(length=120), nullable=False),
        sa.Column("role", sa.String(length=20), nullable=True),
        sa.Column("grade", sa.String(length=20), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("branch_id", sa.Integer(), nullable=True),
        sa.Column("brand_id", sa.Integer(), nullable=True),
        sa.Column("team_id", sa.Integer(), nullable=True),
        sa.Column("position", sa.String(length=50), nullable=True),
        sa.Column("department", sa.String(length=50), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("name", sa.String(length=50), nullable=True),
        sa.Column("phone", sa.String(length=20), nullable=True),
        sa.Column("last_login", sa.DateTime(), nullable=True),
        sa.Column("permissions", sa.JSON(), nullable=True),
        sa.Column("delegated_by", sa.Integer(), nullable=True),
        sa.Column("delegated_at", sa.DateTime(), nullable=True),
        sa.Column("delegation_expires", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["branch_id"],
            ["branches.id"],
        ),
        sa.ForeignKeyConstraint(
            ["brand_id"],
            ["brands.id"],
        ),
        sa.ForeignKeyConstraint(
            ["delegated_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["teams.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.create_index("idx_user_branch_id", ["branch_id"], unique=False)
        batch_op.create_index("idx_user_created_at", ["created_at"], unique=False)
        batch_op.create_index("idx_user_email", ["email"], unique=False)
        batch_op.create_index("idx_user_role", ["role"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_users_branch_id"), ["branch_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_users_brand_id"), ["brand_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_users_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_users_deleted_at"), ["deleted_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_users_department"), ["department"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_users_email"), ["email"], unique=True)
        batch_op.create_index(batch_op.f("ix_users_grade"), ["grade"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_users_last_login"), ["last_login"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_users_position"), ["position"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_users_role"), ["role"], unique=False)
        batch_op.create_index(batch_op.f("ix_users_status"), ["status"], unique=False)
        batch_op.create_index(batch_op.f("ix_users_team_id"), ["team_id"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_users_username"), ["username"], unique=True
        )

    op.create_table(
        "action_logs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("action", sa.String(length=50), nullable=False),
        sa.Column("message", sa.String(length=255), nullable=True),
        sa.Column("ip_address", sa.String(length=45), nullable=True),
        sa.Column("user_agent", sa.String(length=200), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("action_logs", schema=None) as batch_op:
        batch_op.create_index(
            "idx_actionlog_action_date", ["action", "created_at"], unique=False
        )
        batch_op.create_index(
            "idx_actionlog_user_action", ["user_id", "action"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_action_logs_action"), ["action"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_action_logs_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_action_logs_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "approval_workflows",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("workflow_type", sa.String(length=50), nullable=False),
        sa.Column("target_type", sa.String(length=50), nullable=False),
        sa.Column("target_id", sa.Integer(), nullable=False),
        sa.Column("requester_id", sa.Integer(), nullable=False),
        sa.Column("approver_id", sa.Integer(), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("request_data", sa.JSON(), nullable=True),
        sa.Column("approval_data", sa.JSON(), nullable=True),
        sa.Column("comments", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("approved_at", sa.DateTime(), nullable=True),
        sa.Column("rejected_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["approver_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["requester_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("approval_workflows", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_approval_workflows_approved_at"),
            ["approved_at"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_approval_workflows_approver_id"),
            ["approver_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_approval_workflows_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_approval_workflows_rejected_at"),
            ["rejected_at"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_approval_workflows_requester_id"),
            ["requester_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_approval_workflows_status"), ["status"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_approval_workflows_target_id"), ["target_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_approval_workflows_target_type"),
            ["target_type"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_approval_workflows_workflow_type"),
            ["workflow_type"],
            unique=False,
        )

    op.create_table(
        "approve_logs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("action", sa.String(length=32), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.Column("admin_id", sa.Integer(), nullable=False),
        sa.Column("reason", sa.String(length=256), nullable=True),
        sa.Column("ip_address", sa.String(length=45), nullable=True),
        sa.ForeignKeyConstraint(
            ["admin_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("approve_logs", schema=None) as batch_op:
        batch_op.create_index(
            "idx_approvelog_admin_date", ["admin_id", "timestamp"], unique=False
        )
        batch_op.create_index(
            "idx_approvelog_user_action", ["user_id", "action"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_approve_logs_action"), ["action"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_approve_logs_admin_id"), ["admin_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_approve_logs_timestamp"), ["timestamp"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_approve_logs_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "attendance_evaluations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("date_from", sa.Date(), nullable=False),
        sa.Column("date_to", sa.Date(), nullable=False),
        sa.Column("total_days", sa.Integer(), nullable=True),
        sa.Column("late_count", sa.Integer(), nullable=True),
        sa.Column("early_leave_count", sa.Integer(), nullable=True),
        sa.Column("overtime_count", sa.Integer(), nullable=True),
        sa.Column("normal_count", sa.Integer(), nullable=True),
        sa.Column("score", sa.Integer(), nullable=True),
        sa.Column("grade", sa.String(length=5), nullable=True),
        sa.Column("comment", sa.Text(), nullable=True),
        sa.Column("evaluator_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["evaluator_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("attendance_evaluations", schema=None) as batch_op:
        batch_op.create_index(
            "idx_attendance_evaluation_grade", ["grade"], unique=False
        )
        batch_op.create_index(
            "idx_attendance_evaluation_score", ["score"], unique=False
        )
        batch_op.create_index(
            "idx_attendance_evaluation_user_period",
            ["user_id", "date_from", "date_to"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_attendance_evaluations_created_at"),
            ["created_at"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_attendance_evaluations_date_from"),
            ["date_from"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_attendance_evaluations_date_to"), ["date_to"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_attendance_evaluations_evaluator_id"),
            ["evaluator_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_attendance_evaluations_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "attendance_reports",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("period_from", sa.Date(), nullable=False),
        sa.Column("period_to", sa.Date(), nullable=False),
        sa.Column("total", sa.Integer(), nullable=True),
        sa.Column("late", sa.Integer(), nullable=True),
        sa.Column("early", sa.Integer(), nullable=True),
        sa.Column("ot", sa.Integer(), nullable=True),
        sa.Column("ontime", sa.Integer(), nullable=True),
        sa.Column("score", sa.Integer(), nullable=True),
        sa.Column("grade", sa.String(length=10), nullable=True),
        sa.Column("comment", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("warning", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "attendances",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("clock_in", sa.DateTime(), nullable=False),
        sa.Column("clock_out", sa.DateTime(), nullable=True),
        sa.Column("location_in", sa.String(length=100), nullable=True),
        sa.Column("location_out", sa.String(length=100), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("reason", sa.String(length=200), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("attendances", schema=None) as batch_op:
        batch_op.create_index(
            "idx_attendance_date_range", ["clock_in", "clock_out"], unique=False
        )
        batch_op.create_index(
            "idx_attendance_user_date", ["user_id", "clock_in"], unique=False
        )
        batch_op.create_index("idx_attendance_user_id", ["user_id"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_attendances_clock_in"), ["clock_in"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_attendances_clock_out"), ["clock_out"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_attendances_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_attendances_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "branches",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=True),
        sa.Column("address", sa.String(length=200), nullable=True),
        sa.Column("phone", sa.String(length=20), nullable=True),
        sa.Column("processing_time_standard", sa.Integer(), nullable=True),
        sa.Column("brand_id", sa.Integer(), nullable=True),
        sa.Column("store_code", sa.String(length=20), nullable=True),
        sa.Column("store_type", sa.String(length=20), nullable=True),
        sa.Column("business_hours", sa.JSON(), nullable=True),
        sa.Column("capacity", sa.Integer(), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["brand_id"],
            ["brands.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("store_code"),
    )
    with op.batch_alter_table("branches", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_branches_brand_id"), ["brand_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_branches_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_branches_status"), ["status"], unique=False
        )

    op.create_table(
        "brand_data_collections",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("brand_id", sa.Integer(), nullable=False),
        sa.Column("data_type", sa.String(length=50), nullable=False),
        sa.Column("collection_date", sa.Date(), nullable=False),
        sa.Column("data_source", sa.String(length=100), nullable=True),
        sa.Column("raw_data", sa.JSON(), nullable=True),
        sa.Column("processed_data", sa.JSON(), nullable=True),
        sa.Column("metrics", sa.JSON(), nullable=True),
        sa.Column("anomalies", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["brand_id"],
            ["brands.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("brand_data_collections", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_brand_data_collections_brand_id"), ["brand_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_brand_data_collections_collection_date"),
            ["collection_date"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_brand_data_collections_created_at"),
            ["created_at"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_brand_data_collections_data_type"),
            ["data_type"],
            unique=False,
        )

    op.create_table(
        "chat_rooms",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("room_type", sa.String(length=20), nullable=False),
        sa.Column("creator_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["creator_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "cleaning_plan",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("date", sa.Date(), nullable=True),
        sa.Column("plan", sa.String(length=200), nullable=False),
        sa.Column("team", sa.String(length=30), nullable=True),
        sa.Column("manager_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["manager_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "feedback",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("satisfaction", sa.Integer(), nullable=True),
        sa.Column("health", sa.Integer(), nullable=True),
        sa.Column("comment", sa.String(length=500), nullable=True),
        sa.Column("category", sa.String(length=50), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("feedback", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_feedback_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_feedback_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "iot_data",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("device_id", sa.Integer(), nullable=False),
        sa.Column("data_type", sa.String(length=32), nullable=False),
        sa.Column("value", sa.Float(), nullable=True),
        sa.Column("extra", sa.JSON(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["device_id"],
            ["iot_devices.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("iot_data", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_iot_data_timestamp"), ["timestamp"], unique=False
        )

    op.create_table(
        "notices",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=100), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("file_path", sa.String(length=255), nullable=True),
        sa.Column("file_type", sa.String(length=20), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("author_id", sa.Integer(), nullable=False),
        sa.Column("category", sa.String(length=30), nullable=True),
        sa.Column("is_hidden", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("notices", schema=None) as batch_op:
        batch_op.create_index(
            "idx_notice_author_category", ["author_id", "category"], unique=False
        )
        batch_op.create_index("idx_notice_created", ["created_at"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_notices_author_id"), ["author_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notices_category"), ["category"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notices_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notices_is_hidden"), ["is_hidden"], unique=False
        )

    op.create_table(
        "notifications",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("content", sa.String(length=255), nullable=False),
        sa.Column("title", sa.String(length=100), nullable=True),
        sa.Column("category", sa.String(length=50), nullable=False),
        sa.Column("related_url", sa.String(length=255), nullable=True),
        sa.Column("link", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("is_read", sa.Boolean(), nullable=True),
        sa.Column("is_admin_only", sa.Boolean(), nullable=True),
        sa.Column("recipient_role", sa.String(length=20), nullable=True),
        sa.Column("recipient_team", sa.String(length=20), nullable=True),
        sa.Column("priority", sa.String(length=10), nullable=True),
        sa.Column("ai_priority", sa.String(length=10), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("notifications", schema=None) as batch_op:
        batch_op.create_index(
            "idx_notification_category_date", ["category", "created_at"], unique=False
        )
        batch_op.create_index(
            "idx_notification_created_at", ["created_at"], unique=False
        )
        batch_op.create_index(
            "idx_notification_priority_date", ["priority", "created_at"], unique=False
        )
        batch_op.create_index(
            "idx_notification_team_role",
            ["recipient_team", "recipient_role"],
            unique=False,
        )
        batch_op.create_index("idx_notification_user_id", ["user_id"], unique=False)
        batch_op.create_index(
            "idx_notification_user_read", ["user_id", "is_read"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notifications_ai_priority"), ["ai_priority"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notifications_category"), ["category"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notifications_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notifications_is_admin_only"),
            ["is_admin_only"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_notifications_is_read"), ["is_read"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notifications_priority"), ["priority"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notifications_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "pay_transfers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("from_user_id", sa.Integer(), nullable=False),
        sa.Column("to_user_id", sa.Integer(), nullable=False),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(length=200), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["from_user_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["to_user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("pay_transfers", schema=None) as batch_op:
        batch_op.create_index(
            "idx_transfer_status", ["status", "created_at"], unique=False
        )
        batch_op.create_index(
            "idx_transfer_users", ["from_user_id", "to_user_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_pay_transfers_completed_at"), ["completed_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_pay_transfers_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_pay_transfers_from_user_id"), ["from_user_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_pay_transfers_status"), ["status"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_pay_transfers_to_user_id"), ["to_user_id"], unique=False
        )

    op.create_table(
        "payrolls",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("year", sa.Integer(), nullable=False),
        sa.Column("month", sa.Integer(), nullable=False),
        sa.Column("base_salary", sa.Integer(), nullable=True),
        sa.Column("allowance", sa.Integer(), nullable=True),
        sa.Column("deduction", sa.Integer(), nullable=True),
        sa.Column("net_salary", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("payrolls", schema=None) as batch_op:
        batch_op.create_index(
            "idx_payroll_user_year_month", ["user_id", "year", "month"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_payrolls_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_payrolls_month"), ["month"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_payrolls_user_id"), ["user_id"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_payrolls_year"), ["year"], unique=False)

    op.create_table(
        "permission_change_logs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False, comment="권한 변경 대상"),
        sa.Column("changed_by", sa.Integer(), nullable=False, comment="권한 변경자"),
        sa.Column(
            "change_type",
            sa.String(length=20),
            nullable=False,
            comment="변경 유형: role/permission/delegation",
        ),
        sa.Column(
            "before_value", sa.String(length=500), nullable=True, comment="변경 전 값"
        ),
        sa.Column(
            "after_value", sa.String(length=500), nullable=True, comment="변경 후 값"
        ),
        sa.Column("reason", sa.String(length=200), nullable=True, comment="변경 사유"),
        sa.Column("ip_address", sa.String(length=45), nullable=True, comment="IP 주소"),
        sa.Column(
            "user_agent",
            sa.String(length=500),
            nullable=True,
            comment="사용자 에이전트",
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True, comment="변경일시"),
        sa.ForeignKeyConstraint(
            ["changed_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("permission_change_logs", schema=None) as batch_op:
        batch_op.create_index(
            "idx_permissionlog_changer_date", ["changed_by", "created_at"], unique=False
        )
        batch_op.create_index(
            "idx_permissionlog_type_date", ["change_type", "created_at"], unique=False
        )
        batch_op.create_index(
            "idx_permissionlog_user_date", ["user_id", "created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_permission_change_logs_change_type"),
            ["change_type"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_permission_change_logs_changed_by"),
            ["changed_by"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_permission_change_logs_created_at"),
            ["created_at"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_permission_change_logs_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "permission_templates",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False, comment="템플릿명"),
        sa.Column(
            "description", sa.String(length=200), nullable=True, comment="템플릿 설명"
        ),
        sa.Column(
            "permissions",
            sa.String(length=500),
            nullable=True,
            comment="권한 목록 (JSON)",
        ),
        sa.Column(
            "role_type",
            sa.String(length=20),
            nullable=True,
            comment="역할 유형: manager/teamlead/employee",
        ),
        sa.Column("is_active", sa.Boolean(), nullable=True, comment="활성화 여부"),
        sa.Column("created_by", sa.Integer(), nullable=False, comment="생성자"),
        sa.Column("created_at", sa.DateTime(), nullable=True, comment="생성일시"),
        sa.Column("updated_at", sa.DateTime(), nullable=True, comment="수정일시"),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    with op.batch_alter_table("permission_templates", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_permission_templates_created_by"),
            ["created_by"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_permission_templates_role_type"), ["role_type"], unique=False
        )

    op.create_table(
        "reason_templates",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("text", sa.String(length=100), nullable=False, comment="사유 텍스트"),
        sa.Column(
            "team", sa.String(length=30), nullable=True, comment="팀별 템플릿(옵션)"
        ),
        sa.Column(
            "status",
            sa.String(length=20),
            nullable=True,
            comment="승인 상태: pending/approved/rejected",
        ),
        sa.Column("is_active", sa.Boolean(), nullable=True, comment="활성화 여부"),
        sa.Column("created_by", sa.Integer(), nullable=True, comment="생성자"),
        sa.Column("approved_by", sa.Integer(), nullable=True, comment="승인자"),
        sa.Column("approved_at", sa.DateTime(), nullable=True, comment="승인일시"),
        sa.Column("created_at", sa.DateTime(), nullable=True, comment="생성일시"),
        sa.Column("updated_at", sa.DateTime(), nullable=True, comment="수정일시"),
        sa.Column("approval_comment", sa.String(length=200), nullable=True),
        sa.ForeignKeyConstraint(
            ["approved_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("text"),
    )
    op.create_table(
        "reports",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("target_type", sa.String(length=10), nullable=False),
        sa.Column("target_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("reason", sa.String(length=100), nullable=False),
        sa.Column("category", sa.String(length=20), nullable=True),
        sa.Column("detail", sa.Text(), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("admin_comment", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("reviewed_at", sa.DateTime(), nullable=True),
        sa.Column("reviewed_by", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["reviewed_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("reports", schema=None) as batch_op:
        batch_op.create_index(
            "idx_report_status_category", ["status", "category"], unique=False
        )
        batch_op.create_index(
            "idx_report_target", ["target_type", "target_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_reports_category"), ["category"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_reports_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_reports_reviewed_at"), ["reviewed_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_reports_reviewed_by"), ["reviewed_by"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_reports_status"), ["status"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_reports_target_id"), ["target_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_reports_target_type"), ["target_type"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_reports_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "shift_requests",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("request_date", sa.Date(), nullable=False),
        sa.Column("desired_date", sa.Date(), nullable=False),
        sa.Column("reason", sa.String(length=255), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("shift_requests", schema=None) as batch_op:
        batch_op.create_index(
            "idx_shiftrequest_date_range",
            ["request_date", "desired_date"],
            unique=False,
        )
        batch_op.create_index(
            "idx_shiftrequest_user_status", ["user_id", "status"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_shift_requests_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_shift_requests_desired_date"), ["desired_date"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_shift_requests_request_date"), ["request_date"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_shift_requests_status"), ["status"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_shift_requests_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "staff_templates",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("position", sa.String(length=50), nullable=False),
        sa.Column("department", sa.String(length=50), nullable=False),
        sa.Column("template_type", sa.String(length=20), nullable=True),
        sa.Column("salary_min", sa.Integer(), nullable=True),
        sa.Column("salary_max", sa.Integer(), nullable=True),
        sa.Column("salary_base", sa.Integer(), nullable=True),
        sa.Column("work_days", sa.JSON(), nullable=True),
        sa.Column("work_hours_start", sa.String(length=5), nullable=True),
        sa.Column("work_hours_end", sa.String(length=5), nullable=True),
        sa.Column("benefits", sa.JSON(), nullable=True),
        sa.Column("permissions", sa.JSON(), nullable=True),
        sa.Column("required_documents", sa.JSON(), nullable=True),
        sa.Column("probation_period", sa.Integer(), nullable=True),
        sa.Column("notice_period", sa.Integer(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "suggestions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("answer", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("answered_at", sa.DateTime(), nullable=True),
        sa.Column("is_anonymous", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("suggestions", schema=None) as batch_op:
        batch_op.create_index("idx_suggestion_answered", ["answered_at"], unique=False)
        batch_op.create_index("idx_suggestion_created", ["created_at"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_suggestions_answered_at"), ["answered_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_suggestions_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_suggestions_is_anonymous"), ["is_anonymous"], unique=False
        )

    op.create_table(
        "system_logs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("action", sa.String(length=100), nullable=False),
        sa.Column("detail", sa.String(length=500), nullable=True),
        sa.Column("ip_address", sa.String(length=45), nullable=True),
        sa.Column("user_agent", sa.String(length=500), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_permissions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False, comment="사용자 ID"),
        sa.Column(
            "permission_name", sa.String(length=50), nullable=False, comment="권한명"
        ),
        sa.Column("is_active", sa.Boolean(), nullable=True, comment="활성화 여부"),
        sa.Column("granted_by", sa.Integer(), nullable=False, comment="권한 부여자"),
        sa.Column("granted_at", sa.DateTime(), nullable=True, comment="권한 부여일시"),
        sa.Column("expires_at", sa.DateTime(), nullable=True, comment="권한 만료일시"),
        sa.Column(
            "reason", sa.String(length=200), nullable=True, comment="권한 부여 사유"
        ),
        sa.ForeignKeyConstraint(
            ["granted_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("user_permissions", schema=None) as batch_op:
        batch_op.create_index(
            "idx_userpermission_active_expires",
            ["is_active", "expires_at"],
            unique=False,
        )
        batch_op.create_index(
            "idx_userpermission_granter_date",
            ["granted_by", "granted_at"],
            unique=False,
        )
        batch_op.create_index(
            "idx_userpermission_user_name", ["user_id", "permission_name"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_user_permissions_granted_by"), ["granted_by"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_user_permissions_permission_name"),
            ["permission_name"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_user_permissions_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "ai_diagnoses",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("brand_id", sa.Integer(), nullable=True),
        sa.Column("store_id", sa.Integer(), nullable=True),
        sa.Column("diagnosis_type", sa.String(length=50), nullable=False),
        sa.Column("severity", sa.String(length=20), nullable=True),
        sa.Column("title", sa.String(length=200), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("findings", sa.JSON(), nullable=True),
        sa.Column("recommendations", sa.JSON(), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("priority", sa.String(length=20), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("reviewed_at", sa.DateTime(), nullable=True),
        sa.Column("reviewed_by", sa.Integer(), nullable=True),
        sa.Column("implemented_at", sa.DateTime(), nullable=True),
        sa.Column("implemented_by", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["brand_id"],
            ["brands.id"],
        ),
        sa.ForeignKeyConstraint(
            ["implemented_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["reviewed_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["store_id"],
            ["branches.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("ai_diagnoses", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_ai_diagnoses_brand_id"), ["brand_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_ai_diagnoses_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_ai_diagnoses_diagnosis_type"),
            ["diagnosis_type"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_ai_diagnoses_implemented_at"),
            ["implemented_at"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_ai_diagnoses_implemented_by"),
            ["implemented_by"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_ai_diagnoses_priority"), ["priority"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_ai_diagnoses_reviewed_at"), ["reviewed_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_ai_diagnoses_reviewed_by"), ["reviewed_by"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_ai_diagnoses_severity"), ["severity"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_ai_diagnoses_status"), ["status"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_ai_diagnoses_store_id"), ["store_id"], unique=False
        )

    op.create_table(
        "chat_messages",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("room_id", sa.String(length=36), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("message", sa.Text(), nullable=False),
        sa.Column("message_type", sa.String(length=20), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["room_id"],
            ["chat_rooms.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "chat_participants",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("room_id", sa.String(length=36), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("joined_at", sa.DateTime(), nullable=True),
        sa.Column("last_read_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["room_id"],
            ["chat_rooms.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("room_id", "user_id", name="_room_user_uc"),
    )
    op.create_table(
        "excuses",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("attendance_report_id", sa.Integer(), nullable=True),
        sa.Column("attendance_evaluation_id", sa.Integer(), nullable=True),
        sa.Column("title", sa.String(length=200), nullable=False, comment="소명 제목"),
        sa.Column("content", sa.Text(), nullable=False, comment="소명 내용"),
        sa.Column(
            "status",
            sa.String(length=20),
            nullable=True,
            comment="상태: pending/reviewed/accepted/rejected",
        ),
        sa.Column(
            "priority",
            sa.String(length=10),
            nullable=True,
            comment="우선순위: 긴급/중요/일반",
        ),
        sa.Column(
            "category", sa.String(length=50), nullable=True, comment="소명 카테고리"
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("reviewed_at", sa.DateTime(), nullable=True),
        sa.Column("reviewed_by", sa.Integer(), nullable=True),
        sa.Column("admin_comment", sa.Text(), nullable=True, comment="관리자 답변"),
        sa.ForeignKeyConstraint(
            ["attendance_evaluation_id"],
            ["attendance_evaluations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["attendance_report_id"],
            ["attendance_reports.id"],
        ),
        sa.ForeignKeyConstraint(
            ["reviewed_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("excuses", schema=None) as batch_op:
        batch_op.create_index(
            "idx_excuse_reviewer_date", ["reviewed_by", "reviewed_at"], unique=False
        )
        batch_op.create_index(
            "idx_excuse_status_date", ["status", "created_at"], unique=False
        )
        batch_op.create_index(
            "idx_excuse_user_status", ["user_id", "status"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_excuses_attendance_evaluation_id"),
            ["attendance_evaluation_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_excuses_attendance_report_id"),
            ["attendance_report_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_excuses_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_excuses_priority"), ["priority"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_excuses_reviewed_at"), ["reviewed_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_excuses_reviewed_by"), ["reviewed_by"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_excuses_status"), ["status"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_excuses_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "feedback_issues",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=128), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("branch_id", sa.Integer(), nullable=True),
        sa.Column("status", sa.String(length=32), nullable=True),
        sa.ForeignKeyConstraint(
            ["branch_id"],
            ["branches.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "improvement_requests",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("brand_id", sa.Integer(), nullable=True),
        sa.Column("store_id", sa.Integer(), nullable=True),
        sa.Column("requester_id", sa.Integer(), nullable=False),
        sa.Column("category", sa.String(length=50), nullable=False),
        sa.Column("title", sa.String(length=200), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("current_issue", sa.Text(), nullable=True),
        sa.Column("proposed_solution", sa.Text(), nullable=True),
        sa.Column("expected_benefits", sa.Text(), nullable=True),
        sa.Column("priority", sa.String(length=20), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("estimated_cost", sa.Integer(), nullable=True),
        sa.Column("estimated_time", sa.String(length=50), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("reviewed_at", sa.DateTime(), nullable=True),
        sa.Column("reviewed_by", sa.Integer(), nullable=True),
        sa.Column("admin_comment", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["brand_id"],
            ["brands.id"],
        ),
        sa.ForeignKeyConstraint(
            ["requester_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["reviewed_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["store_id"],
            ["branches.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("improvement_requests", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_improvement_requests_brand_id"), ["brand_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_improvement_requests_category"), ["category"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_improvement_requests_created_at"),
            ["created_at"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_improvement_requests_priority"), ["priority"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_improvement_requests_requester_id"),
            ["requester_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_improvement_requests_reviewed_at"),
            ["reviewed_at"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_improvement_requests_reviewed_by"),
            ["reviewed_by"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_improvement_requests_status"), ["status"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_improvement_requests_store_id"), ["store_id"], unique=False
        )

    op.create_table(
        "inventory_items",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=200), nullable=False),
        sa.Column("category", sa.String(length=100), nullable=False),
        sa.Column("current_stock", sa.Integer(), nullable=True),
        sa.Column("min_stock", sa.Integer(), nullable=True),
        sa.Column("max_stock", sa.Integer(), nullable=True),
        sa.Column("unit", sa.String(length=20), nullable=True),
        sa.Column("unit_price", sa.Integer(), nullable=True),
        sa.Column("supplier", sa.String(length=100), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("expiry_date", sa.Date(), nullable=True),
        sa.Column("location", sa.String(length=100), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("branch_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["branch_id"],
            ["branches.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("inventory_items", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_inventory_items_category"), ["category"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_inventory_items_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_inventory_items_name"), ["name"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_inventory_items_status"), ["status"], unique=False
        )

    op.create_table(
        "notice_comments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("notice_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("is_hidden", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["notice_id"],
            ["notices.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("notice_comments", schema=None) as batch_op:
        batch_op.create_index("idx_noticecomment_created", ["created_at"], unique=False)
        batch_op.create_index(
            "idx_noticecomment_notice_user", ["notice_id", "user_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notice_comments_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notice_comments_is_hidden"), ["is_hidden"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notice_comments_notice_id"), ["notice_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notice_comments_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "notice_histories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("notice_id", sa.Integer(), nullable=False),
        sa.Column("editor_id", sa.Integer(), nullable=False),
        sa.Column("before_title", sa.String(length=100), nullable=True),
        sa.Column("before_content", sa.Text(), nullable=True),
        sa.Column("before_file_path", sa.String(length=255), nullable=True),
        sa.Column("before_file_type", sa.String(length=20), nullable=True),
        sa.Column("edited_at", sa.DateTime(), nullable=True),
        sa.Column("action", sa.String(length=10), nullable=True),
        sa.Column("ip_address", sa.String(length=45), nullable=True),
        sa.ForeignKeyConstraint(
            ["editor_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["notice_id"],
            ["notices.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("notice_histories", schema=None) as batch_op:
        batch_op.create_index("idx_noticehistory_editor", ["editor_id"], unique=False)
        batch_op.create_index("idx_noticehistory_notice", ["notice_id"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_notice_histories_action"), ["action"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notice_histories_edited_at"), ["edited_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notice_histories_editor_id"), ["editor_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notice_histories_notice_id"), ["notice_id"], unique=False
        )

    op.create_table(
        "notice_reads",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("notice_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("read_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["notice_id"],
            ["notices.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("notice_id", "user_id", name="uq_notice_user"),
    )
    with op.batch_alter_table("notice_reads", schema=None) as batch_op:
        batch_op.create_index(
            "idx_noticeread_user_notice", ["user_id", "notice_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notice_reads_notice_id"), ["notice_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notice_reads_read_at"), ["read_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notice_reads_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "order_request",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("item_name", sa.String(length=128), nullable=True),
        sa.Column("quantity", sa.Integer(), nullable=True),
        sa.Column("status", sa.String(length=32), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column("requested_by", sa.Integer(), nullable=True),
        sa.Column("branch_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["branch_id"],
            ["branches.id"],
        ),
        sa.ForeignKeyConstraint(
            ["requested_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "reason_edit_logs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "attendance_id", sa.Integer(), nullable=False, comment="근태 기록 ID"
        ),
        sa.Column(
            "old_reason", sa.String(length=200), nullable=True, comment="이전 사유"
        ),
        sa.Column(
            "new_reason", sa.String(length=200), nullable=True, comment="새 사유"
        ),
        sa.Column("edited_by", sa.Integer(), nullable=False, comment="수정자"),
        sa.Column("edited_at", sa.DateTime(), nullable=True, comment="수정일시"),
        sa.Column("ip_address", sa.String(length=45), nullable=True, comment="IP 주소"),
        sa.Column(
            "user_agent",
            sa.String(length=500),
            nullable=True,
            comment="사용자 에이전트",
        ),
        sa.ForeignKeyConstraint(
            ["attendance_id"],
            ["attendances.id"],
        ),
        sa.ForeignKeyConstraint(
            ["edited_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("reason_edit_logs", schema=None) as batch_op:
        batch_op.create_index(
            "idx_reason_edit_attendance", ["attendance_id"], unique=False
        )
        batch_op.create_index("idx_reason_edit_date", ["edited_at"], unique=False)
        batch_op.create_index("idx_reason_edit_editor", ["edited_by"], unique=False)

    op.create_table(
        "your_program_orders",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("order_number", sa.String(length=50), nullable=False),
        sa.Column("customer_name", sa.String(length=100), nullable=True),
        sa.Column("order_items", sa.Text(), nullable=False),
        sa.Column("total_amount", sa.Integer(), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column("processing_minutes", sa.Integer(), nullable=True),
        sa.Column("store_id", sa.Integer(), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("payment_method", sa.String(length=20), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("stock_consumed", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["store_id"],
            ["branches.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("your_program_orders", schema=None) as batch_op:
        batch_op.create_index(
            "idx_your_program_order_created_completed",
            ["created_at", "completed_at"],
            unique=False,
        )
        batch_op.create_index(
            "idx_your_program_order_employee_date",
            ["employee_id", "created_at"],
            unique=False,
        )
        batch_op.create_index(
            "idx_your_program_order_processing_time",
            ["processing_minutes"],
            unique=False,
        )
        batch_op.create_index(
            "idx_your_program_order_store_status", ["store_id", "status"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_your_program_orders_completed_at"),
            ["completed_at"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_your_program_orders_created_at"),
            ["created_at"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_your_program_orders_employee_id"),
            ["employee_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_your_program_orders_order_number"),
            ["order_number"],
            unique=True,
        )
        batch_op.create_index(
            batch_op.f("ix_your_program_orders_processing_minutes"),
            ["processing_minutes"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_your_program_orders_status"), ["status"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_your_program_orders_store_id"), ["store_id"], unique=False
        )

    op.create_table(
        "schedule",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("branch_id", sa.Integer(), nullable=True),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("start_time", sa.Time(), nullable=False),
        sa.Column("end_time", sa.Time(), nullable=False),
        sa.Column("type", sa.String(length=16), nullable=True),
        sa.Column("category", sa.String(length=50), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column("memo", sa.String(length=200), nullable=True),
        sa.Column("team", sa.String(length=30), nullable=True),
        sa.Column("plan", sa.String(length=200), nullable=True),
        sa.Column("manager_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["branch_id"],
            ["branches.id"],
        ),
        sa.ForeignKeyConstraint(
            ["manager_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("schedule", schema=None) as batch_op:
        batch_op.create_index("idx_schedule_branch_id", ["branch_id"], unique=False)
        batch_op.create_index("idx_schedule_date", ["date"], unique=False)
        batch_op.create_index(
            "idx_schedule_date_user", ["date", "user_id"], unique=False
        )
        batch_op.create_index("idx_schedule_user_id", ["user_id"], unique=False)

    op.create_table(
        "staff",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("position", sa.String(length=100), nullable=False),
        sa.Column("phone", sa.String(length=20), nullable=True),
        sa.Column("email", sa.String(length=120), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("avatar", sa.String(length=255), nullable=True),
        sa.Column("join_date", sa.Date(), nullable=False),
        sa.Column("salary", sa.String(length=50), nullable=True),
        sa.Column("department", sa.String(length=100), nullable=True),
        sa.Column("your_program_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["your_program_id"],
            ["branches.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("staff", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_staff_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_staff_your_program_id"), ["your_program_id"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_staff_status"), ["status"], unique=False)
        batch_op.create_index(batch_op.f("ix_staff_user_id"), ["user_id"], unique=False)

    op.create_table(
        "staff_registration_steps",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("session_id", sa.String(length=100), nullable=False),
        sa.Column("step1_completed", sa.Boolean(), nullable=True),
        sa.Column("name", sa.String(length=100), nullable=True),
        sa.Column("email", sa.String(length=120), nullable=True),
        sa.Column("phone", sa.String(length=20), nullable=True),
        sa.Column("position", sa.String(length=50), nullable=True),
        sa.Column("department", sa.String(length=50), nullable=True),
        sa.Column("username", sa.String(length=80), nullable=True),
        sa.Column("password_hash", sa.String(length=255), nullable=True),
        sa.Column("step2_completed", sa.Boolean(), nullable=True),
        sa.Column("work_days", sa.JSON(), nullable=True),
        sa.Column("work_hours_start", sa.String(length=5), nullable=True),
        sa.Column("work_hours_end", sa.String(length=5), nullable=True),
        sa.Column("salary_base", sa.Integer(), nullable=True),
        sa.Column("salary_allowance", sa.Integer(), nullable=True),
        sa.Column("salary_bonus", sa.Integer(), nullable=True),
        sa.Column("benefits", sa.JSON(), nullable=True),
        sa.Column("step3_completed", sa.Boolean(), nullable=True),
        sa.Column("health_certificate_issue_date", sa.Date(), nullable=True),
        sa.Column("health_certificate_expiry_date", sa.Date(), nullable=True),
        sa.Column("health_certificate_renewal_date", sa.Date(), nullable=True),
        sa.Column("required_documents", sa.JSON(), nullable=True),
        sa.Column("step4_completed", sa.Boolean(), nullable=True),
        sa.Column("permissions", sa.JSON(), nullable=True),
        sa.Column("role", sa.String(length=20), nullable=True),
        sa.Column("template_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("expires_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["template_id"],
            ["staff_templates.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("session_id"),
    )
    op.create_table(
        "store_data_collections",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("store_id", sa.Integer(), nullable=False),
        sa.Column("data_type", sa.String(length=50), nullable=False),
        sa.Column("collection_date", sa.Date(), nullable=False),
        sa.Column("data_source", sa.String(length=100), nullable=True),
        sa.Column("raw_data", sa.JSON(), nullable=True),
        sa.Column("processed_data", sa.JSON(), nullable=True),
        sa.Column("metrics", sa.JSON(), nullable=True),
        sa.Column("anomalies", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["store_id"],
            ["branches.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("store_data_collections", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_store_data_collections_collection_date"),
            ["collection_date"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_store_data_collections_created_at"),
            ["created_at"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_store_data_collections_data_type"),
            ["data_type"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_store_data_collections_store_id"), ["store_id"], unique=False
        )

    op.create_table(
        "system_health",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("brand_id", sa.Integer(), nullable=True),
        sa.Column("store_id", sa.Integer(), nullable=True),
        sa.Column("health_date", sa.Date(), nullable=False),
        sa.Column("overall_score", sa.Float(), nullable=False),
        sa.Column("performance_score", sa.Float(), nullable=True),
        sa.Column("quality_score", sa.Float(), nullable=True),
        sa.Column("efficiency_score", sa.Float(), nullable=True),
        sa.Column("safety_score", sa.Float(), nullable=True),
        sa.Column("customer_satisfaction_score", sa.Float(), nullable=True),
        sa.Column("issues", sa.JSON(), nullable=True),
        sa.Column("recommendations", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["brand_id"],
            ["brands.id"],
        ),
        sa.ForeignKeyConstraint(
            ["store_id"],
            ["branches.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("system_health", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_system_health_brand_id"), ["brand_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_system_health_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_system_health_health_date"), ["health_date"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_system_health_store_id"), ["store_id"], unique=False
        )

    op.create_table(
        "ai_improvement_suggestions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("diagnosis_id", sa.Integer(), nullable=True),
        sa.Column("brand_id", sa.Integer(), nullable=True),
        sa.Column("store_id", sa.Integer(), nullable=True),
        sa.Column("suggestion_type", sa.String(length=50), nullable=False),
        sa.Column("title", sa.String(length=200), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("current_state", sa.JSON(), nullable=True),
        sa.Column("proposed_changes", sa.JSON(), nullable=True),
        sa.Column("expected_impact", sa.JSON(), nullable=True),
        sa.Column("implementation_steps", sa.JSON(), nullable=True),
        sa.Column("estimated_effort", sa.String(length=20), nullable=True),
        sa.Column("estimated_roi", sa.Float(), nullable=True),
        sa.Column("confidence_score", sa.Float(), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("reviewed_at", sa.DateTime(), nullable=True),
        sa.Column("reviewed_by", sa.Integer(), nullable=True),
        sa.Column("admin_comment", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["brand_id"],
            ["brands.id"],
        ),
        sa.ForeignKeyConstraint(
            ["diagnosis_id"],
            ["ai_diagnoses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["reviewed_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["store_id"],
            ["branches.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("ai_improvement_suggestions", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_ai_improvement_suggestions_brand_id"),
            ["brand_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_ai_improvement_suggestions_created_at"),
            ["created_at"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_ai_improvement_suggestions_diagnosis_id"),
            ["diagnosis_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_ai_improvement_suggestions_reviewed_at"),
            ["reviewed_at"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_ai_improvement_suggestions_reviewed_by"),
            ["reviewed_by"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_ai_improvement_suggestions_status"), ["status"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_ai_improvement_suggestions_store_id"),
            ["store_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_ai_improvement_suggestions_suggestion_type"),
            ["suggestion_type"],
            unique=False,
        )

    op.create_table(
        "comment_histories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("comment_id", sa.Integer(), nullable=False),
        sa.Column("editor_id", sa.Integer(), nullable=False),
        sa.Column("before_content", sa.Text(), nullable=True),
        sa.Column("edited_at", sa.DateTime(), nullable=True),
        sa.Column("action", sa.String(length=10), nullable=True),
        sa.Column("ip_address", sa.String(length=45), nullable=True),
        sa.ForeignKeyConstraint(
            ["comment_id"],
            ["notice_comments.id"],
        ),
        sa.ForeignKeyConstraint(
            ["editor_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("comment_histories", schema=None) as batch_op:
        batch_op.create_index(
            "idx_commenthistory_comment", ["comment_id"], unique=False
        )
        batch_op.create_index("idx_commenthistory_editor", ["editor_id"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_comment_histories_action"), ["action"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_comment_histories_comment_id"), ["comment_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_comment_histories_edited_at"), ["edited_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_comment_histories_editor_id"), ["editor_id"], unique=False
        )

    op.create_table(
        "contracts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("staff_id", sa.Integer(), nullable=False),
        sa.Column("contract_number", sa.String(length=50), nullable=False),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("expiry_date", sa.Date(), nullable=False),
        sa.Column("renewal_date", sa.Date(), nullable=False),
        sa.Column("contract_type", sa.String(length=50), nullable=True),
        sa.Column("salary_amount", sa.Integer(), nullable=True),
        sa.Column("file_path", sa.String(length=255), nullable=True),
        sa.Column("file_name", sa.String(length=255), nullable=True),
        sa.Column("file_size", sa.Integer(), nullable=True),
        sa.Column("notification_sent", sa.Boolean(), nullable=True),
        sa.Column("expired_notification_sent", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["staff_id"],
            ["staff.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("contract_number"),
    )
    with op.batch_alter_table("contracts", schema=None) as batch_op:
        batch_op.create_index(
            "idx_contract_expired_notification",
            ["expiry_date", "expired_notification_sent"],
            unique=False,
        )
        batch_op.create_index(
            "idx_contract_expiry_notification",
            ["expiry_date", "notification_sent"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_contracts_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_contracts_expired_notification_sent"),
            ["expired_notification_sent"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_contracts_expiry_date"), ["expiry_date"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_contracts_notification_sent"),
            ["notification_sent"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_contracts_staff_id"), ["staff_id"], unique=False
        )

    op.create_table(
        "excuse_responses",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("excuse_id", sa.Integer(), nullable=False),
        sa.Column("responder_id", sa.Integer(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False, comment="답변 내용"),
        sa.Column(
            "response_type",
            sa.String(length=20),
            nullable=True,
            comment="답변 유형: comment/decision/request",
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["excuse_id"],
            ["excuses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["responder_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("excuse_responses", schema=None) as batch_op:
        batch_op.create_index(
            "idx_excuseresponse_excuse_date", ["excuse_id", "created_at"], unique=False
        )
        batch_op.create_index(
            "idx_excuseresponse_responder_date",
            ["responder_id", "created_at"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_excuse_responses_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_excuse_responses_excuse_id"), ["excuse_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_excuse_responses_responder_id"),
            ["responder_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_excuse_responses_response_type"),
            ["response_type"],
            unique=False,
        )

    op.create_table(
        "health_certificates",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("staff_id", sa.Integer(), nullable=False),
        sa.Column("certificate_number", sa.String(length=50), nullable=False),
        sa.Column("issue_date", sa.Date(), nullable=False),
        sa.Column("expiry_date", sa.Date(), nullable=False),
        sa.Column("renewal_date", sa.Date(), nullable=False),
        sa.Column("issuing_authority", sa.String(length=100), nullable=True),
        sa.Column("certificate_type", sa.String(length=50), nullable=True),
        sa.Column("file_path", sa.String(length=255), nullable=True),
        sa.Column("file_name", sa.String(length=255), nullable=True),
        sa.Column("file_size", sa.Integer(), nullable=True),
        sa.Column("notification_sent", sa.Boolean(), nullable=True),
        sa.Column("expired_notification_sent", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["staff_id"],
            ["staff.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("certificate_number"),
    )
    with op.batch_alter_table("health_certificates", schema=None) as batch_op:
        batch_op.create_index(
            "idx_healthcertificate_expired_notification",
            ["expiry_date", "expired_notification_sent"],
            unique=False,
        )
        batch_op.create_index(
            "idx_healthcertificate_expiry_notification",
            ["expiry_date", "notification_sent"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_health_certificates_created_at"),
            ["created_at"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_health_certificates_expired_notification_sent"),
            ["expired_notification_sent"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_health_certificates_expiry_date"),
            ["expiry_date"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_health_certificates_notification_sent"),
            ["notification_sent"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_health_certificates_staff_id"), ["staff_id"], unique=False
        )

    op.create_table(
        "orders",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("item", sa.String(length=200), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("unit", sa.String(length=20), nullable=True),
        sa.Column("order_date", sa.Date(), nullable=False),
        sa.Column("ordered_by", sa.Integer(), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("detail", sa.String(length=500), nullable=True),
        sa.Column("memo", sa.String(length=500), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column("processing_minutes", sa.Integer(), nullable=True),
        sa.Column("employee_id", sa.Integer(), nullable=True),
        sa.Column("store_id", sa.Integer(), nullable=True),
        sa.Column("inventory_item_id", sa.Integer(), nullable=True),
        sa.Column("supplier", sa.String(length=100), nullable=True),
        sa.Column("unit_price", sa.Integer(), nullable=True),
        sa.Column("total_cost", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["inventory_item_id"],
            ["inventory_items.id"],
        ),
        sa.ForeignKeyConstraint(
            ["ordered_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["store_id"],
            ["branches.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("orders", schema=None) as batch_op:
        batch_op.create_index("idx_order_created_at", ["created_at"], unique=False)
        batch_op.create_index(
            "idx_order_date_status", ["created_at", "status"], unique=False
        )
        batch_op.create_index("idx_order_employee_id", ["employee_id"], unique=False)
        batch_op.create_index("idx_order_status", ["status"], unique=False)
        batch_op.create_index("idx_order_store_id", ["store_id"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_orders_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_orders_status"), ["status"], unique=False)

    op.create_table(
        "stock_movements",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("inventory_item_id", sa.Integer(), nullable=False),
        sa.Column("movement_type", sa.String(length=20), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("before_stock", sa.Integer(), nullable=False),
        sa.Column("after_stock", sa.Integer(), nullable=False),
        sa.Column("reason", sa.String(length=200), nullable=True),
        sa.Column("reference_type", sa.String(length=20), nullable=True),
        sa.Column("reference_id", sa.Integer(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["inventory_item_id"],
            ["inventory_items.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("stock_movements", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_stock_movements_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_stock_movements_inventory_item_id"),
            ["inventory_item_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_stock_movements_movement_type"),
            ["movement_type"],
            unique=False,
        )

    op.create_table(
        "order_feedbacks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("order_id", sa.Integer(), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("type", sa.String(length=16), nullable=False),
        sa.Column("message", sa.String(length=256), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("order_feedbacks", schema=None) as batch_op:
        batch_op.create_index("idx_orderfeedback_created", ["created_at"], unique=False)
        batch_op.create_index(
            "idx_orderfeedback_employee_type", ["employee_id", "type"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_order_feedbacks_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_order_feedbacks_employee_id"), ["employee_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_order_feedbacks_order_id"), ["order_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_order_feedbacks_type"), ["type"], unique=False
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("order_feedbacks", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_order_feedbacks_type"))
        batch_op.drop_index(batch_op.f("ix_order_feedbacks_order_id"))
        batch_op.drop_index(batch_op.f("ix_order_feedbacks_employee_id"))
        batch_op.drop_index(batch_op.f("ix_order_feedbacks_created_at"))
        batch_op.drop_index("idx_orderfeedback_employee_type")
        batch_op.drop_index("idx_orderfeedback_created")

    op.drop_table("order_feedbacks")
    with op.batch_alter_table("stock_movements", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_stock_movements_movement_type"))
        batch_op.drop_index(batch_op.f("ix_stock_movements_inventory_item_id"))
        batch_op.drop_index(batch_op.f("ix_stock_movements_created_at"))

    op.drop_table("stock_movements")
    with op.batch_alter_table("orders", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_orders_status"))
        batch_op.drop_index(batch_op.f("ix_orders_created_at"))
        batch_op.drop_index("idx_order_store_id")
        batch_op.drop_index("idx_order_status")
        batch_op.drop_index("idx_order_employee_id")
        batch_op.drop_index("idx_order_date_status")
        batch_op.drop_index("idx_order_created_at")

    op.drop_table("orders")
    with op.batch_alter_table("health_certificates", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_health_certificates_staff_id"))
        batch_op.drop_index(batch_op.f("ix_health_certificates_notification_sent"))
        batch_op.drop_index(batch_op.f("ix_health_certificates_expiry_date"))
        batch_op.drop_index(
            batch_op.f("ix_health_certificates_expired_notification_sent")
        )
        batch_op.drop_index(batch_op.f("ix_health_certificates_created_at"))
        batch_op.drop_index("idx_healthcertificate_expiry_notification")
        batch_op.drop_index("idx_healthcertificate_expired_notification")

    op.drop_table("health_certificates")
    with op.batch_alter_table("excuse_responses", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_excuse_responses_response_type"))
        batch_op.drop_index(batch_op.f("ix_excuse_responses_responder_id"))
        batch_op.drop_index(batch_op.f("ix_excuse_responses_excuse_id"))
        batch_op.drop_index(batch_op.f("ix_excuse_responses_created_at"))
        batch_op.drop_index("idx_excuseresponse_responder_date")
        batch_op.drop_index("idx_excuseresponse_excuse_date")

    op.drop_table("excuse_responses")
    with op.batch_alter_table("contracts", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_contracts_staff_id"))
        batch_op.drop_index(batch_op.f("ix_contracts_notification_sent"))
        batch_op.drop_index(batch_op.f("ix_contracts_expiry_date"))
        batch_op.drop_index(batch_op.f("ix_contracts_expired_notification_sent"))
        batch_op.drop_index(batch_op.f("ix_contracts_created_at"))
        batch_op.drop_index("idx_contract_expiry_notification")
        batch_op.drop_index("idx_contract_expired_notification")

    op.drop_table("contracts")
    with op.batch_alter_table("comment_histories", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_comment_histories_editor_id"))
        batch_op.drop_index(batch_op.f("ix_comment_histories_edited_at"))
        batch_op.drop_index(batch_op.f("ix_comment_histories_comment_id"))
        batch_op.drop_index(batch_op.f("ix_comment_histories_action"))
        batch_op.drop_index("idx_commenthistory_editor")
        batch_op.drop_index("idx_commenthistory_comment")

    op.drop_table("comment_histories")
    with op.batch_alter_table("ai_improvement_suggestions", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_ai_improvement_suggestions_suggestion_type"))
        batch_op.drop_index(batch_op.f("ix_ai_improvement_suggestions_store_id"))
        batch_op.drop_index(batch_op.f("ix_ai_improvement_suggestions_status"))
        batch_op.drop_index(batch_op.f("ix_ai_improvement_suggestions_reviewed_by"))
        batch_op.drop_index(batch_op.f("ix_ai_improvement_suggestions_reviewed_at"))
        batch_op.drop_index(batch_op.f("ix_ai_improvement_suggestions_diagnosis_id"))
        batch_op.drop_index(batch_op.f("ix_ai_improvement_suggestions_created_at"))
        batch_op.drop_index(batch_op.f("ix_ai_improvement_suggestions_brand_id"))

    op.drop_table("ai_improvement_suggestions")
    with op.batch_alter_table("system_health", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_system_health_store_id"))
        batch_op.drop_index(batch_op.f("ix_system_health_health_date"))
        batch_op.drop_index(batch_op.f("ix_system_health_created_at"))
        batch_op.drop_index(batch_op.f("ix_system_health_brand_id"))

    op.drop_table("system_health")
    with op.batch_alter_table("store_data_collections", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_store_data_collections_store_id"))
        batch_op.drop_index(batch_op.f("ix_store_data_collections_data_type"))
        batch_op.drop_index(batch_op.f("ix_store_data_collections_created_at"))
        batch_op.drop_index(batch_op.f("ix_store_data_collections_collection_date"))

    op.drop_table("store_data_collections")
    op.drop_table("staff_registration_steps")
    with op.batch_alter_table("staff", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_staff_user_id"))
        batch_op.drop_index(batch_op.f("ix_staff_status"))
        batch_op.drop_index(batch_op.f("ix_staff_your_program_id"))
        batch_op.drop_index(batch_op.f("ix_staff_created_at"))

    op.drop_table("staff")
    with op.batch_alter_table("schedule", schema=None) as batch_op:
        batch_op.drop_index("idx_schedule_user_id")
        batch_op.drop_index("idx_schedule_date_user")
        batch_op.drop_index("idx_schedule_date")
        batch_op.drop_index("idx_schedule_branch_id")

    op.drop_table("schedule")
    with op.batch_alter_table("your_program_orders", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_your_program_orders_store_id"))
        batch_op.drop_index(batch_op.f("ix_your_program_orders_status"))
        batch_op.drop_index(batch_op.f("ix_your_program_orders_processing_minutes"))
        batch_op.drop_index(batch_op.f("ix_your_program_orders_order_number"))
        batch_op.drop_index(batch_op.f("ix_your_program_orders_employee_id"))
        batch_op.drop_index(batch_op.f("ix_your_program_orders_created_at"))
        batch_op.drop_index(batch_op.f("ix_your_program_orders_completed_at"))
        batch_op.drop_index("idx_your_program_order_store_status")
        batch_op.drop_index("idx_your_program_order_processing_time")
        batch_op.drop_index("idx_your_program_order_employee_date")
        batch_op.drop_index("idx_your_program_order_created_completed")

    op.drop_table("your_program_orders")
    with op.batch_alter_table("reason_edit_logs", schema=None) as batch_op:
        batch_op.drop_index("idx_reason_edit_editor")
        batch_op.drop_index("idx_reason_edit_date")
        batch_op.drop_index("idx_reason_edit_attendance")

    op.drop_table("reason_edit_logs")
    op.drop_table("order_request")
    with op.batch_alter_table("notice_reads", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_notice_reads_user_id"))
        batch_op.drop_index(batch_op.f("ix_notice_reads_read_at"))
        batch_op.drop_index(batch_op.f("ix_notice_reads_notice_id"))
        batch_op.drop_index("idx_noticeread_user_notice")

    op.drop_table("notice_reads")
    with op.batch_alter_table("notice_histories", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_notice_histories_notice_id"))
        batch_op.drop_index(batch_op.f("ix_notice_histories_editor_id"))
        batch_op.drop_index(batch_op.f("ix_notice_histories_edited_at"))
        batch_op.drop_index(batch_op.f("ix_notice_histories_action"))
        batch_op.drop_index("idx_noticehistory_notice")
        batch_op.drop_index("idx_noticehistory_editor")

    op.drop_table("notice_histories")
    with op.batch_alter_table("notice_comments", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_notice_comments_user_id"))
        batch_op.drop_index(batch_op.f("ix_notice_comments_notice_id"))
        batch_op.drop_index(batch_op.f("ix_notice_comments_is_hidden"))
        batch_op.drop_index(batch_op.f("ix_notice_comments_created_at"))
        batch_op.drop_index("idx_noticecomment_notice_user")
        batch_op.drop_index("idx_noticecomment_created")

    op.drop_table("notice_comments")
    with op.batch_alter_table("inventory_items", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_inventory_items_status"))
        batch_op.drop_index(batch_op.f("ix_inventory_items_name"))
        batch_op.drop_index(batch_op.f("ix_inventory_items_created_at"))
        batch_op.drop_index(batch_op.f("ix_inventory_items_category"))

    op.drop_table("inventory_items")
    with op.batch_alter_table("improvement_requests", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_improvement_requests_store_id"))
        batch_op.drop_index(batch_op.f("ix_improvement_requests_status"))
        batch_op.drop_index(batch_op.f("ix_improvement_requests_reviewed_by"))
        batch_op.drop_index(batch_op.f("ix_improvement_requests_reviewed_at"))
        batch_op.drop_index(batch_op.f("ix_improvement_requests_requester_id"))
        batch_op.drop_index(batch_op.f("ix_improvement_requests_priority"))
        batch_op.drop_index(batch_op.f("ix_improvement_requests_created_at"))
        batch_op.drop_index(batch_op.f("ix_improvement_requests_category"))
        batch_op.drop_index(batch_op.f("ix_improvement_requests_brand_id"))

    op.drop_table("improvement_requests")
    op.drop_table("feedback_issues")
    with op.batch_alter_table("excuses", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_excuses_user_id"))
        batch_op.drop_index(batch_op.f("ix_excuses_status"))
        batch_op.drop_index(batch_op.f("ix_excuses_reviewed_by"))
        batch_op.drop_index(batch_op.f("ix_excuses_reviewed_at"))
        batch_op.drop_index(batch_op.f("ix_excuses_priority"))
        batch_op.drop_index(batch_op.f("ix_excuses_created_at"))
        batch_op.drop_index(batch_op.f("ix_excuses_attendance_report_id"))
        batch_op.drop_index(batch_op.f("ix_excuses_attendance_evaluation_id"))
        batch_op.drop_index("idx_excuse_user_status")
        batch_op.drop_index("idx_excuse_status_date")
        batch_op.drop_index("idx_excuse_reviewer_date")

    op.drop_table("excuses")
    op.drop_table("chat_participants")
    op.drop_table("chat_messages")
    with op.batch_alter_table("ai_diagnoses", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_ai_diagnoses_store_id"))
        batch_op.drop_index(batch_op.f("ix_ai_diagnoses_status"))
        batch_op.drop_index(batch_op.f("ix_ai_diagnoses_severity"))
        batch_op.drop_index(batch_op.f("ix_ai_diagnoses_reviewed_by"))
        batch_op.drop_index(batch_op.f("ix_ai_diagnoses_reviewed_at"))
        batch_op.drop_index(batch_op.f("ix_ai_diagnoses_priority"))
        batch_op.drop_index(batch_op.f("ix_ai_diagnoses_implemented_by"))
        batch_op.drop_index(batch_op.f("ix_ai_diagnoses_implemented_at"))
        batch_op.drop_index(batch_op.f("ix_ai_diagnoses_diagnosis_type"))
        batch_op.drop_index(batch_op.f("ix_ai_diagnoses_created_at"))
        batch_op.drop_index(batch_op.f("ix_ai_diagnoses_brand_id"))

    op.drop_table("ai_diagnoses")
    with op.batch_alter_table("user_permissions", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_permissions_user_id"))
        batch_op.drop_index(batch_op.f("ix_user_permissions_permission_name"))
        batch_op.drop_index(batch_op.f("ix_user_permissions_granted_by"))
        batch_op.drop_index("idx_userpermission_user_name")
        batch_op.drop_index("idx_userpermission_granter_date")
        batch_op.drop_index("idx_userpermission_active_expires")

    op.drop_table("user_permissions")
    op.drop_table("system_logs")
    with op.batch_alter_table("suggestions", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_suggestions_is_anonymous"))
        batch_op.drop_index(batch_op.f("ix_suggestions_created_at"))
        batch_op.drop_index(batch_op.f("ix_suggestions_answered_at"))
        batch_op.drop_index("idx_suggestion_created")
        batch_op.drop_index("idx_suggestion_answered")

    op.drop_table("suggestions")
    op.drop_table("staff_templates")
    with op.batch_alter_table("shift_requests", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_shift_requests_user_id"))
        batch_op.drop_index(batch_op.f("ix_shift_requests_status"))
        batch_op.drop_index(batch_op.f("ix_shift_requests_request_date"))
        batch_op.drop_index(batch_op.f("ix_shift_requests_desired_date"))
        batch_op.drop_index(batch_op.f("ix_shift_requests_created_at"))
        batch_op.drop_index("idx_shiftrequest_user_status")
        batch_op.drop_index("idx_shiftrequest_date_range")

    op.drop_table("shift_requests")
    with op.batch_alter_table("reports", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_reports_user_id"))
        batch_op.drop_index(batch_op.f("ix_reports_target_type"))
        batch_op.drop_index(batch_op.f("ix_reports_target_id"))
        batch_op.drop_index(batch_op.f("ix_reports_status"))
        batch_op.drop_index(batch_op.f("ix_reports_reviewed_by"))
        batch_op.drop_index(batch_op.f("ix_reports_reviewed_at"))
        batch_op.drop_index(batch_op.f("ix_reports_created_at"))
        batch_op.drop_index(batch_op.f("ix_reports_category"))
        batch_op.drop_index("idx_report_target")
        batch_op.drop_index("idx_report_status_category")

    op.drop_table("reports")
    op.drop_table("reason_templates")
    with op.batch_alter_table("permission_templates", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_permission_templates_role_type"))
        batch_op.drop_index(batch_op.f("ix_permission_templates_created_by"))

    op.drop_table("permission_templates")
    with op.batch_alter_table("permission_change_logs", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_permission_change_logs_user_id"))
        batch_op.drop_index(batch_op.f("ix_permission_change_logs_created_at"))
        batch_op.drop_index(batch_op.f("ix_permission_change_logs_changed_by"))
        batch_op.drop_index(batch_op.f("ix_permission_change_logs_change_type"))
        batch_op.drop_index("idx_permissionlog_user_date")
        batch_op.drop_index("idx_permissionlog_type_date")
        batch_op.drop_index("idx_permissionlog_changer_date")

    op.drop_table("permission_change_logs")
    with op.batch_alter_table("payrolls", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_payrolls_year"))
        batch_op.drop_index(batch_op.f("ix_payrolls_user_id"))
        batch_op.drop_index(batch_op.f("ix_payrolls_month"))
        batch_op.drop_index(batch_op.f("ix_payrolls_created_at"))
        batch_op.drop_index("idx_payroll_user_year_month")

    op.drop_table("payrolls")
    with op.batch_alter_table("pay_transfers", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_pay_transfers_to_user_id"))
        batch_op.drop_index(batch_op.f("ix_pay_transfers_status"))
        batch_op.drop_index(batch_op.f("ix_pay_transfers_from_user_id"))
        batch_op.drop_index(batch_op.f("ix_pay_transfers_created_at"))
        batch_op.drop_index(batch_op.f("ix_pay_transfers_completed_at"))
        batch_op.drop_index("idx_transfer_users")
        batch_op.drop_index("idx_transfer_status")

    op.drop_table("pay_transfers")
    with op.batch_alter_table("notifications", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_notifications_user_id"))
        batch_op.drop_index(batch_op.f("ix_notifications_priority"))
        batch_op.drop_index(batch_op.f("ix_notifications_is_read"))
        batch_op.drop_index(batch_op.f("ix_notifications_is_admin_only"))
        batch_op.drop_index(batch_op.f("ix_notifications_created_at"))
        batch_op.drop_index(batch_op.f("ix_notifications_category"))
        batch_op.drop_index(batch_op.f("ix_notifications_ai_priority"))
        batch_op.drop_index("idx_notification_user_read")
        batch_op.drop_index("idx_notification_user_id")
        batch_op.drop_index("idx_notification_team_role")
        batch_op.drop_index("idx_notification_priority_date")
        batch_op.drop_index("idx_notification_created_at")
        batch_op.drop_index("idx_notification_category_date")

    op.drop_table("notifications")
    with op.batch_alter_table("notices", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_notices_is_hidden"))
        batch_op.drop_index(batch_op.f("ix_notices_created_at"))
        batch_op.drop_index(batch_op.f("ix_notices_category"))
        batch_op.drop_index(batch_op.f("ix_notices_author_id"))
        batch_op.drop_index("idx_notice_created")
        batch_op.drop_index("idx_notice_author_category")

    op.drop_table("notices")
    with op.batch_alter_table("iot_data", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_iot_data_timestamp"))

    op.drop_table("iot_data")
    with op.batch_alter_table("feedback", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_feedback_user_id"))
        batch_op.drop_index(batch_op.f("ix_feedback_created_at"))

    op.drop_table("feedback")
    op.drop_table("cleaning_plan")
    op.drop_table("chat_rooms")
    with op.batch_alter_table("brand_data_collections", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_brand_data_collections_data_type"))
        batch_op.drop_index(batch_op.f("ix_brand_data_collections_created_at"))
        batch_op.drop_index(batch_op.f("ix_brand_data_collections_collection_date"))
        batch_op.drop_index(batch_op.f("ix_brand_data_collections_brand_id"))

    op.drop_table("brand_data_collections")
    with op.batch_alter_table("branches", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_branches_status"))
        batch_op.drop_index(batch_op.f("ix_branches_created_at"))
        batch_op.drop_index(batch_op.f("ix_branches_brand_id"))

    op.drop_table("branches")
    with op.batch_alter_table("attendances", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_attendances_user_id"))
        batch_op.drop_index(batch_op.f("ix_attendances_created_at"))
        batch_op.drop_index(batch_op.f("ix_attendances_clock_out"))
        batch_op.drop_index(batch_op.f("ix_attendances_clock_in"))
        batch_op.drop_index("idx_attendance_user_id")
        batch_op.drop_index("idx_attendance_user_date")
        batch_op.drop_index("idx_attendance_date_range")

    op.drop_table("attendances")
    op.drop_table("attendance_reports")
    with op.batch_alter_table("attendance_evaluations", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_attendance_evaluations_user_id"))
        batch_op.drop_index(batch_op.f("ix_attendance_evaluations_evaluator_id"))
        batch_op.drop_index(batch_op.f("ix_attendance_evaluations_date_to"))
        batch_op.drop_index(batch_op.f("ix_attendance_evaluations_date_from"))
        batch_op.drop_index(batch_op.f("ix_attendance_evaluations_created_at"))
        batch_op.drop_index("idx_attendance_evaluation_user_period")
        batch_op.drop_index("idx_attendance_evaluation_score")
        batch_op.drop_index("idx_attendance_evaluation_grade")

    op.drop_table("attendance_evaluations")
    with op.batch_alter_table("approve_logs", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_approve_logs_user_id"))
        batch_op.drop_index(batch_op.f("ix_approve_logs_timestamp"))
        batch_op.drop_index(batch_op.f("ix_approve_logs_admin_id"))
        batch_op.drop_index(batch_op.f("ix_approve_logs_action"))
        batch_op.drop_index("idx_approvelog_user_action")
        batch_op.drop_index("idx_approvelog_admin_date")

    op.drop_table("approve_logs")
    with op.batch_alter_table("approval_workflows", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_approval_workflows_workflow_type"))
        batch_op.drop_index(batch_op.f("ix_approval_workflows_target_type"))
        batch_op.drop_index(batch_op.f("ix_approval_workflows_target_id"))
        batch_op.drop_index(batch_op.f("ix_approval_workflows_status"))
        batch_op.drop_index(batch_op.f("ix_approval_workflows_requester_id"))
        batch_op.drop_index(batch_op.f("ix_approval_workflows_rejected_at"))
        batch_op.drop_index(batch_op.f("ix_approval_workflows_created_at"))
        batch_op.drop_index(batch_op.f("ix_approval_workflows_approver_id"))
        batch_op.drop_index(batch_op.f("ix_approval_workflows_approved_at"))

    op.drop_table("approval_workflows")
    with op.batch_alter_table("action_logs", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_action_logs_user_id"))
        batch_op.drop_index(batch_op.f("ix_action_logs_created_at"))
        batch_op.drop_index(batch_op.f("ix_action_logs_action"))
        batch_op.drop_index("idx_actionlog_user_action")
        batch_op.drop_index("idx_actionlog_action_date")

    op.drop_table("action_logs")
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_users_username"))
        batch_op.drop_index(batch_op.f("ix_users_team_id"))
        batch_op.drop_index(batch_op.f("ix_users_status"))
        batch_op.drop_index(batch_op.f("ix_users_role"))
        batch_op.drop_index(batch_op.f("ix_users_position"))
        batch_op.drop_index(batch_op.f("ix_users_last_login"))
        batch_op.drop_index(batch_op.f("ix_users_grade"))
        batch_op.drop_index(batch_op.f("ix_users_email"))
        batch_op.drop_index(batch_op.f("ix_users_department"))
        batch_op.drop_index(batch_op.f("ix_users_deleted_at"))
        batch_op.drop_index(batch_op.f("ix_users_created_at"))
        batch_op.drop_index(batch_op.f("ix_users_brand_id"))
        batch_op.drop_index(batch_op.f("ix_users_branch_id"))
        batch_op.drop_index("idx_user_role")
        batch_op.drop_index("idx_user_email")
        batch_op.drop_index("idx_user_created_at")
        batch_op.drop_index("idx_user_branch_id")

    op.drop_table("users")
    op.drop_table("teams")
    op.drop_table("iot_devices")
    with op.batch_alter_table("brands", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_brands_status"))
        batch_op.drop_index(batch_op.f("ix_brands_created_at"))

    op.drop_table("brands")
    # ### end Alembic commands ###
